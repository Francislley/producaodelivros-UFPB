== Gerenciando versões dos livros

Durante o ciclo de vida dos livros serão elaboradas diversas versões dos
livros, este capítulo descreve como gerenciar suas versões.


=== Sobre o versionamento dos livros

(((Versionamento)))


NOTE: A estratégia de versionamento dos livros foram baseados em
http://semver.org/spec/v2.0.0.html e https://medium.com/i-m-h-o/2aa5cff10010.

////
Referências sobre a edição:

http://www.teleread.com/ebooks/e-books-need-better-versioning-and-change-notification/
http://www.teleread.com/ebooks/e-books-good-for-fixing-mistakes/
http://newkindofbook.com/2011/04/update-at-page-11-letting-readers-know-about-ebook-revisions/
https://community.author-it.com/entries/23172716-Advice-on-versioning-books
http://sno2.iwarp.com/ebook-faq/documents/versioning.html


TODO: Ver https://leanpub.com/manifesto
self-publish
////


O número da edição evolui com o livro, a primeira edição, a segunda etc..
Mas quando lançar uma edição revisada ao invés de uma nova edição?

.Resumo da estratégia de versionamento
____
Summary

Given a version number MAJOR.MINOR.PATCH, increment the:

. MAJOR version when you make incompatible API changes,
. MINOR version when you add functionality in a backwards-compatible manner, and
. PATCH version when you make backwards-compatible bug fixes.

Additional labels for pre-release and build metadata are available as extensions to the MAJOR.MINOR.PATCH format.
____


=== Número da versão

A versão atual do livro é definida dentro do arquivo `livro/docinfo.xml`.

TIP: Um exemplo deste arquivo pode ser visto em: https://github.com/edusantana/producao-computacao-ead-ufpb/blob/master/estrutura-inicial/livro/docinfo.xml.


 <edition>v1.0.0</edition>

=== Enviando o livro para gráfica

Quando o livro é enviado para a gráfica, marcamos uma ((tag)) no repositório..

==== Verificar o número da versão

No diretório `livro` (que contém o arquivo `docinfo.xml`), execute o comando:

.Comando para verificar a versão e as revisões dos livros
----
grep '<edition>.*</edition>' docinfo.xml;grep '<revnumber>.*</revnumber>' docinfo.xml
----

WARNING: Certifique-se de que esteja dentro do diretório `livro`, que contem o arquivo `docinfo.xml`.

O resultado esperado é o número da edição, contido no arquivo `livro/docinfo.xml`:

 <edition>v1.0.0</edition>

IMPORTANT: Atualize o número da edição apropriadamente antes de continuar.

==== Atualize o histórico de revisão

O histórico de revisão é importante para que pessoas que já leram o livro
possam saber o que mudou.

    <revision>
      <revnumber>v1.0.0</revnumber>
      <date>Março de 2013</date>
      <authorinitials>Eduardo Santana</authorinitials>
      <revremark>
        Primeira versão do livro.
      </revremark>
    </revision>

O valores de `<revnumber>` devem ser os mesmos assumidos por `<edition>`.

Lembre também de:

* Atualizar a data
* Texto de revremark indicando o que foi alterado.

[[sec_alteracoes_pendentes]]
==== Verificando se há alterações pendentes

.Comando para verificar se há alterações não enviadas
----
git status -s -b
----

==== Gerando o livro

Antes de aplicar a tag é importante gerar novamente o livro, para se certificar
que as alterações foram incorporadas.

==== Aplicando uma tag

WARNING: Antes de aplicar uma tag você deve se certificar que não há
alterações não comitadas (<<sec_alteracoes_pendentes>>). 

A tag aplicada será o resultado do comando:

.Visualizar edição do livro
----
LIVRO_EDICAO=`grep '<edition>.*</edition>' docinfo.xml |xmllint --xpath "string(//edition)" -`; echo Edição do livro: $LIVRO_EDICAO
----

O comando a seguir irá aplicar uma tag, será solicitado informar uma mensagem
ao cadastrar a tag.

.Comando para aplicar a tag
----
LIVRO_EDICAO=`grep '<edition>.*</edition>' docinfo.xml |xmllint --xpath "string(//edition)" -`; git tag -a $LIVRO_EDICAO ;git tag
----

IMPORTANT: A aplicação de tag é uma operação no repositório local, será 
necessário submeter a tag para o github depois (<<git_tag_push>>).


[[git_tag_excluir]]
==== Excluindo uma tag

Caso você tenha criado uma tag e deseja excluí-la, utilize o seguinte comando:

----
LIVRO_EDICAO=`grep '<edition>.*</edition>' docinfo.xml |xmllint --xpath "string(//edition)" -`;git tag -d $LIVRO_EDICAO;git tag
----

NOTE: É seguro criar e remover uma tag em seguida.

==== Verificando a tag aplicada

----
LIVRO_EDICAO=`grep '<edition>.*</edition>' docinfo.xml |xmllint --xpath "string(//edition)" -`; git show $LIVRO_EDICAO
----

[[git_tag_push]]
==== Submetendo tag para o github

----
git push origin --tags
----

////
Sempre terminar o arquivo com uma nova linha.
////

