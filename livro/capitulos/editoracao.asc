
== Criando um novo livro

No github, criamos um novo repositório com o nome da disciplina com o sufixo 
`-livro`, que tem a finalidade apenas de marcar quais repositórios estão em
conformidade com este modelo.

Exemplo de repositório: `https://github.com/edusantana/introducao-a-programacao-livro`

[[baixando-projeto]]
=== Baixando o projeto

(((github, baixando projeto)))

Se você *possui o ssh* configurado pelo github (preferível), baixe o projeto
utilizando o protocolo *git*:

`git clone git@github.com:edusantana/introducao-a-programacao-livro.git`

Caso contrário, baixe utilizando o protocolo *https*:

`git clone https://github.com/edusantana/introducao-a-programacao-livro.git`

(((github, ssh)))

[IMPORTANT]
====
A configuração do git está descrita em
https://help.github.com/articles/set-up-git. A configuração avançada, com o
ssh está disponível em: https://help.github.com/articles/generating-ssh-keys.
Os comandos desta parte utilizam a configuração com ssh.

Para utilizar a ferramenta git-producao (<<git-producao>>), você precisa
baixar o projeto da primeira forma, com o protocolo *git* ao invés do *https*.
====


[[criando-estrutura-inicial-do-projeto]]
=== Criando a estrutura inicial do projeto

Os projetos devem possuir arquivos modelos para que os autores possam iniciar
o trabalho com facilidade (<<estrutura_inicial>>).

Os arquivos que compõe a estrutura inicial de um novo projeto serão mantidos 
no repositório deste livro. Baixe o projeto deste livro e copie os arquivos 
dentro do novo projeto.

..........................
$ git clone git@github.com:edusantana/producao-computacao-ead-ufpb.git
$ git clone git@github.com:seu-usuario/seu-projeto-livro.git
$ cd seu-projeto-livro
$ rsync -r ../producao-computacao-ead-ufpb/estrutura-inicial/ . 
$ cp ../producao-computacao-ead-ufpb/.gitignore .
$ git rm README.md ; git add . ; git commit -m "Commit inicial"; git push
..........................


[[pdf-offline]]
==== Gerando um pdf do livro (off-line)

O seguinte comando gera o pdf do livro:

 ~/ambiente/asciidoc-8.6.8/a2x.py -v -f pdf livro.asc

NOTE: Este pdf gerado não possui os estilos utilizados na versão final do 
livro, mas serve para ter uma idéia de como será gerado.



[[pdf-offline-estilizado]]
==== Gerando o pdf do livro (off-line estilizado)
O PDF estilizado utiliza um estilo (<<dblatex-estilo>>) personalizado na geração.

O código para geração final do PDF é executado pelo script de geração contido
no servidor web, disponível em: 
https://github.com/edusantana/producao-computacao-ead-ufpb/blob/master/cgi/pull-pdf.py

TIP: Quem utiliza o ambiente para geração off-line pode ignorar a instalação
deste estilo, uma vez que não há garantias que ele permaneça o mesmo ao longo 
da produção. É importante que os autores do livro compreendam que o visal do 
livro não é responsabilidade deles.


[[instalando-ambiente-off-line]]
== Instalando ambiente para desenvolvimento off-line

Nas seções a seguir temos instruções para instalação do ambiente off-line.

IMPORTANT: Este manual somente descreve as instruções para a instalação
do ambiente off-line para o linux.


=== Instalando o git
Necessário para baixar e enviar os textos e imagens produzidas.

 sudo apt-get install git-core

=== Instalando o mercurial
O mercurial não é necessário, mas será utilizado para baixar a nova versão do asciidoc.
 
 sudo apt-get install mercurial

=== Instalar o latex
A produção do livro utiliza uma cadeia de várias ferramentas, uma delas é o latex.

 sudo apt-get install texlive
 ou
 sudo apt-get install texlive-full



=== Instalar o asciidoc e dbaltex
Depois serão removidos, mas é importante porque instala as dependências.

 sudo apt-get install asciidoc
 sudo apt-get install dblatex

==== Removendo e atualizando o asciidoc e dbaltex
Em seguida, precisaremos instalar as novas versões do asciidoc e dblatex.
 
 sudo apt-get remove asciidoc
 sudo apt-get remove dblatex

==== Instala nova versão do dblatex
Instalando a nova versão do dblatex através do easy_install do python.

 sudo apt-get install python-setuptools
 sudo easy_install dblatex

NOTE: A instalação irá ocorrer um diretório parecido com:
'/usr/local/lib/python2.7/dist-packages/dblatex-0.3.4-py2.7.egg/share/doc/dblatex'

==== Instala nova versão do asciidoc
Baixando e instalando a nova versão do asciidoc.

 mkdir ~/ambiente
 cd ~/ambiente
 hg clone -r 8.6.8 https://asciidoc.googlecode.com/hg/ asciidoc-8.6.8

IMPORTANT: A nova versão é necessária principalmente devido a uma 
funcionalidade que permite os títulos das seções possuirem acentos 
(atributo *:ascii-ids:*).

[[graphviz-install]]
=== graphviz
(((graphviz)))

Para gerar gráficos dentro do texto (<<graficos>>).

......................
sudo apt-get install graphviz
......................



[[dblatex-estilo]]
=== Instalando estilo do dblatex para geração do pdf estilizado
(((dblatex, Estilo do pdf)))

O nosso estilo personalizado está disponível em:
https://github.com/edusantana/producao-computacao-ead-ufpb/tree/master/dblatex-computacao-ufpb

O processo de instalação de estilos se encontra descrito no manual do dblatex,
na seção 'Adding a New Formatting Style'.

Path: '/usr/local/lib/python2.7/dist-packages/dblatex-0.3.4-py2.7.egg/share/doc/dblatex/manual.pdf'

.Instalação no servidor
......................
mkdir ~/gitrepos
cd ~/gitrepos
git clone git@github.com:edusantana/producao-computacao-ead-ufpb.git
sudo mkdir /var/www/.dblatex
sudo rsync -r ~/gitrepos/producao-computacao-ead-ufpb/dblatex-computacao-ufpb/* /var/www/.dblatex/
......................

=== Instalação dos scripts cgi

O *Servidor da Produção* funciona através de scripts cgi python, que recebem
as solicitações html e executam os comandos para a geração do livro e slides.

A configuração do Servidor CGI foi realizada seguindo as intruções de
http://jonathanferretti.com/blog/?p=76. 

////
TODO: Copiar as instruções de lá para cá.
////

Após a configuração do servidor e o projeto deste manual baixado em `~/gitrepos`,
os seguintes comandos instalam os scripts:


......................
cd ~/gitrepos
sudo cp -v producao-computacao-ead-ufpb/cgi/*.py /var/www/cgi-bin/
sudo cp -v producao-computacao-ead-ufpb/cgi/*.html /var/www/
......................

=== Instalando filtros do asciidoc

.Instalando dependencia
 sudo apt-get install gcc python-dev 
 sudo apt-get install libjpeg libjpeg-dev libfreetype6 libfreetype6-dev

==== diag filter for Asciidoc

Seguir as intruções do site para instalação:
 
.Instruções
 sudo easy_install blockdiag seqdiag actdiag nwdiag packetdiag
 wget https://asciidoc-diag-filter.googlecode.com/files/diag_filter.zip
 ~/ambiente/asciidoc-8.6.8/asciidoc.py --filter install diag_filter.zip

==== ditaa filter for AsciiDoc

Seguir as intruções do site para instalação:
http://code.google.com/p/asciidoc-ditaa-filter/

.Instruções
 sudo apt-get install ditaa
 wget http://asciidoc-ditaa-filter.googlecode.com/files/ditaa-filter-1.1.zip
 ~/ambiente/asciidoc-8.6.8/asciidoc.py --filter install ditaa-filter-1.1.zip

==== ditaa filter for AsciiDoc

Seguir as intruções do site para instalação:
http://code.google.com/p/asciidoc-ditaa-filter/

.Instruções
 sudo apt-get install qrencode
 wget http://asciidoc-qrencode-filter.googlecode.com/files/qrcode-filter-1.0.zip
 ~/ambiente/asciidoc-8.6.8/asciidoc.py --filter install qrcode-filter-1.0.zip



==== Criando link simbólico para o .asciidoc

Este link é necessário pois os filtros são instalados no home do usuário.

.Comandos para criar o link simbólico
 cd /var/www/
 sudo ln -s /home/eduardo/.asciidoc/

// Sempre terminar o arquivo com uma nova linha.

